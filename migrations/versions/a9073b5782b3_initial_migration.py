"""Initial migration.

Revision ID: a9073b5782b3
Revises: 
Create Date: 2022-05-30 11:07:18.337141

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a9073b5782b3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sensor_data')
    op.drop_table('sensor_data_upd')
    op.drop_table('driver_rate_total')
    op.drop_table('user')
    op.drop_table('users')
    op.drop_table('driver_rate')
    op.drop_column('sensor_data_upd_2', 'driver_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sensor_data_upd_2', sa.Column('driver_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_table('driver_rate',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('driving_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('acceleration_rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('braking_rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cornering_rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('safety_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='driver_rate_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key')
    )
    op.create_table('driver_rate_total',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('driver_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timestamp_start', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('timestamp_end', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('acceleration_rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('braking_rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cornering_rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('safety_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='driver_rate_total_pkey')
    )
    op.create_table('sensor_data_upd',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('AccX', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('AccY', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('AccZ', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('GPS_Long', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('GPS_Lat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('GyroX', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('GyroY', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('GyroZ', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='sensor_data_upd_pkey')
    )
    op.create_table('sensor_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('AccX', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('AccY', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('AccZ', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('GPS_Long', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('GPS_Lat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('GyroX', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('GyroY', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('GyroZ', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='sensor_data_pkey')
    )
    # ### end Alembic commands ###
